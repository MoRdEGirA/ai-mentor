import httpx
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from config import API_BASE_URL
from handlers.achievements import assign_achievement

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    telegram_id = str(user.id)

    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(f"{API_BASE_URL}/students/", json={
                "telegram_id": telegram_id,
                "name": user.first_name or "Unknown"
            })

            try:
                await update.message.delete()
            except:
                pass

            if response.status_code == 200:
                keyboard = InlineKeyboardMarkup([
                    [InlineKeyboardButton("üöÄ –ü–æ–≥–Ω–∞–ª–∏!", callback_data="start_test")]
                ])
                try:
                    await assign_achievement(telegram_id, "–ù–æ–≤–∏—á–æ–∫")
                except Exception as e:
                    print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–≤–æ–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: {e}")

                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=(
                        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ò–ò-–º–µ–Ω—Ç–æ—Ä üëã\n\n"
                        "–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –ø—Ä–æ–π–¥—ë–º –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –≤ –∫–∞–∫–æ–º —Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "
                        "–∏ –∫–∞–∫ –ª—É—á—à–µ –≤—Å–µ–≥–æ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ. –ì–æ—Ç–æ–≤?"
                    ),
                    reply_markup=keyboard
                )
            else:
                await update.effective_chat.send_message("–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")
        except Exception as e:
            print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {e}")
            await update.effective_chat.send_message("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
