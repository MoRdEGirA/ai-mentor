from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import httpx
from config import API_BASE_URL

async def show_motivation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    try:
        telegram_id = str(query.from_user.id)
        async with httpx.AsyncClient() as client:
            r = await client.post(f"{API_BASE_URL}/motivation/", params={"telegram_id": telegram_id})
            print("[DEBUG] –°—Ç–∞—Ç—É—Å –∫–æ–¥–∞:", r.status_code)
            print("[DEBUG] –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:", r.text)
            if r.status_code == 200:
                message = r.json().get("text", "–¢—ã –º–æ–ª–æ–¥–µ—Ü. –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!")
            else:
                message = "–°–µ–≥–æ–¥–Ω—è —Ç—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞–µ—à—å. –ü—Ä–æ–¥–æ–ª–∂–∞–π! ‚ú®"
    except Exception:
        message = "–¢—ã ‚Äî —Å–∏–ª–∞! –î–∞–∂–µ –µ—Å–ª–∏ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –Ω–µ—Ç. üí™"

    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="menu::back")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_text(message, reply_markup=reply_markup)
